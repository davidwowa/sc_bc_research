21B4F4BD9E64ED355C3EB676A28EBEDAF6D8F17BDC365995B319097153044080516BD083BFCCE66121A3072646994C8430CC382B8DC543E84880183BF856CFF5
21b4f4bd9e64ed355c3eb676a28ebedaf6d8f17bdc365995b319097153044080516bd083bfcce66121a3072646994c8430cc382b8dc543e84880183bf856cff5
7a296fab5364b34ce3e0476d55bf291bd41aa085e5ecf2a96883e593aa1836fed22f7242af48d54af18f55c8d1def13ec9314c926666a0ba63f7663500090565

559AEAD08264D5795D3909718CDD05ABD49572E84FE55590EEF31A88A08FDFFD
06f961b802bc46ee168555f066d28f4f0e9afdf3f88174c1ee6f9de004fc30a0

MIGIAkIBzGibQXdkFW5JLpYLhgEJWsiP5JuvMOgyC5lXG2fgbG8JgPP0IW3qdPon3uDYvwetSRDYlTcDaLpA/VJkq8yeavMCQgGnaaAvVPJ2lrDTlR9VF+ldRgMt0pmJF36nQyHVjIrLnc8zCHi/ZGeyoBhGrctGGI9HS6S8atXsfU8kaDmfa0W1UA==
MIGHAkFs9L9R94Euzpqxyl/c95/GEIVNvBB6QAFNv/7NNhHWtQpMi+3ajiEZNdGTXXSd+dvFYMKCJQRjXD15IWWLLPdYCAJCAbACYIUSEXilpb/YiN5MOBBOFbwLWqfFs8U1IaKpHK5BWsE4d4YErvEmHKxz5bhRhgI5+KGhjTw9ArsAj6zPz8yX

  %%lager:info("generate simple key paar over secp512r1 curve"),
  %%{PublicKey, PrivKeyOut} =


// **********************OLD REMOVE IT**********************

http://erlang.org/pipermail/erlang-questions/2013-July/074894.html

// Erlang
rr(public_key).

// read private key
{ok, Bin} = file:read_file("private_key.pem").

// read public key
{ok, Bin2} = file:read_file("public_key.pem").

[OTPEcpkParamsPem, ECPrivateKeyPem] = public_key:pem_decode(Bin).
ECPrivateKey = public_key:pem_entry_decode(ECPrivateKeyPem).

// ???
{_, ParamsBin, ParamsEnc} = OTPEcpkParamsPem.
EcpkParametersPem = {'EcpkParameters', ParamsBin, ParamsEnc}.
ECParams = public_key:pem_entry_decode(EcpkParametersPem).

Msg = <<"The superhamster strikes again at 7PM">>.
Sig = public_key:sign(Msg, sha256, ECPrivateKey).

[SPKI] = public_key:pem_decode(Bin2).

#'SubjectPublicKeyInfo'{algorithm = Der} = SPKI.

RealSPKI = public_key:der_decode('SubjectPublicKeyInfo', Der).

#'SubjectPublicKeyInfo'{subjectPublicKey = {_, Octets}} = RealSPKI.

ECPoint = #'ECPoint'{point = Octets}.

ECPublicKey = {ECPoint, ECParams}.

public_key:verify(Msg, sha256, Sig, ECPublicKey).